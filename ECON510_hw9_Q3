clear; clc; close all;

S = 5000; % # of Simulation Experiment
true_beta = 0;

set_k = [1; 10];
set_rho = [0; 0.5; 0.99];
set_n = [100; 500; 2000];
setup = [kron(set_n, ones(6,1)), repmat(kron(set_k, ones(3,1)),[3,1]), repmat(set_rho, [6,1]), ];
var_uv = @(rho)([ [1, rho];[rho, 1]]);
get_rp_t = @(T)( mean([abs(T)>1.645, abs(T)>1.96, abs(T)>2.56],1) );
get_rp_chi2 = @(T)( mean( [T>icdf('chi2',0.90,1), T>icdf('chi2',0.95,1), T>icdf('chi2',0.99,1)],1) );
get_bias = @(b)( mean(b-true_beta,1) );
result4latex_H0=[];
result4latex_H1=[];

for iter = 1:max(size(setup))

    n = setup(iter,1); k = setup(iter,2); rho = setup(iter,3);
    tv1_H0 = zeros(S,1);
    tv1_H1 = zeros(S,1);
    LM1_H0 = zeros(S,1);
    LM1_H1 = zeros(S,1);

    tv2_H0 = zeros(S,1);
    tv2_H1 = zeros(S,1);
    LM2_H0 = zeros(S,1);
    LM2_H1 = zeros(S,1);

    for simiter=1:S
        std_uvz = chol( blkdiag(var_uv(rho), eye(k)) );
        uvz = randn(n,2+k)*std_uvz;
        u = uvz(:,1); v = uvz(:,2); z = uvz(:,3:end);
        x1 = z*(ones(k,1)) + v; y1 = x1*true_beta + u;
        x2 = z*(ones(k,1)/sqrt(n)) + v; y2 = x2*true_beta + u;

        result1_ive = get_ive(y1,x1,z);
        bhat1(simiter,:) = result1_ive.ive;
        tv1_H0(simiter,1) = (result1_ive.ive - true_beta)./sqrt(diag(result1_ive.vcov));
        tv1_H1(simiter,1) = (result1_ive.ive - (true_beta+2))./sqrt(diag(result1_ive.vcov));
        [LM1_H0(simiter,1),~] = get_LM_CUE(x1,y1,z,true_beta);
        [LM1_H1(simiter,1),~] = get_LM_CUE(x1,y1,z,true_beta+2);

        result2_ive = get_ive(y2,x2,z);
        bhat2(simiter,:) = result2_ive.ive;
        tv2_H0(simiter,1) = (result2_ive.ive - true_beta)./sqrt(diag(result2_ive.vcov));
        tv2_H1(simiter,1) = (result2_ive.ive - (true_beta+2))./sqrt(diag(result2_ive.vcov));
        [LM2_H0(simiter,1),~] = get_LM_CUE(x2,y2,z,true_beta);
        [LM2_H1(simiter,1),~] = get_LM_CUE(x2,y2,z,true_beta+2);
    end

    disp("======================")
    disp(" Simulation Set up")
    disp(" n = "+num2str(n)+", k = "+num2str(k)+", rho = "+num2str(rho));
    disp("-------------------")
    disp("Case 1 : pi = 1")
    disp("Bias : "+num2str( round(get_bias(bhat1),3) ))
    disp("Rejection Probability under H0")
    disp( "t-test : "+ num2str( round(get_rp_t(tv1_H0),3) ))
    disp( "LM_CUE : "+ num2str( round(get_rp_chi2(LM1_H0),3) ))
    disp("Rejection Probability under H1")
    disp( "t-test : "+ num2str( round(get_rp_t(tv1_H1),3) ))
    disp( "LM_CUE : "+ num2str( round(get_rp_chi2(LM1_H1),3) ))
    disp("-------------------")
    disp("Case 1 : pi = 1/sqrt(n)")
    disp("Bias : "+num2str( round(get_bias(bhat2),3) ))
    disp("Rejection Probability under H0")
    disp( "t-test : "+ num2str( round(get_rp_t(tv2_H0),3) ))
    disp( "LM_CUE : "+ num2str( round(get_rp_chi2(LM2_H0),3) ))
    disp("Rejection Probability under H1")
    disp( "t-test : "+ num2str( round(get_rp_t(tv2_H1),3) ))
    disp( "LM_CUE : "+ num2str( round(get_rp_chi2(LM2_H1),3) ))
    disp("======================")
    disp(" ")
    disp(" ")

    result0 = [n; k; rho];
    result_H0 = [result0;
        get_rp_t(tv1_H0)'; get_rp_chi2(LM1_H0)';
        get_rp_t(tv2_H0)'; get_rp_chi2(LM2_H0)'];
    result4latex_H0 = [result4latex_H0; get_result4latex(result_H0,2)];

    result_H1 = [result0;
        get_rp_t(tv1_H1)'; get_rp_chi2(LM1_H1)';
        get_rp_t(tv2_H1)'; get_rp_chi2(LM2_H1)'];
    result4latex_H1 = [result4latex_H1; get_result4latex(result_H1,2)];
end

function [LM, result] = get_LM_CUE(x,y,z,b)
n = size(y,1);
g=(y-x*b).*z; % n by kz
invW = inv( g'*g/n ); % kz by kz
D = mean( ((mean(g,1)*invW*g')' - 1).*x.*z , 1);
zeta = sqrt(n)*D*invW*mean(g,1)';
LM = zeta*inv( D*invW*D' )*zeta;
result.g = g;
result.invW = invW;
result.D = D;
result.zeta = zeta;
end

function result = get_ive(y,x,z)
w = inv(z'*z); zx = z'*x; zy = z'*y; invxzwzx = inv(zx'*w*zx);
result.ive = invxzwzx*(zx'*w*zy);
u2 = (y - x*result.ive).^2;
result.vcov = invxzwzx*(zx'*w*z'*(u2.*z)*w*zx)*invxzwzx;
result.tv = result.ive./sqrt(diag(result.vcov));
end

function result = get_result4latex(x, threshold)
if nargin == 1; threshold = 3; end
result = "";
for iter=1:max(size(x))
    if iter<max(size(x))
        result = result + num2str( round(x(iter,1),threshold) ) + "&";
    else
        result = result + num2str( round(x(iter,1),threshold) ) + "\\";
    end
end
end
